#
# Build configuration for Circle CI
#

general:
    artifacts:
        - /home/ubuntu/AptitudeCracker/app/build/outputs/apk/

machine:
    environment:
        ANDROID_HOME: /usr/local/android-sdk-linux
        ADB_INSTALL_TIMEOUT: 60
        GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx3072M -XX:+HeapDumpOnOutOfMemoryError"'
    java:
        version: oraclejdk8

dependencies:

        pre:
            #- touch app/google-services.json
            #- echo $GOOGLE_SERVICES_JSON > app/google-services.json
            - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-26.0.0,
                    android-26,extra-google-m2repository,extra-google-google_play_services,extra-android-support
        cache_directories:
            - /usr/local/android-sdk-linux/tools
            - /usr/local/android-sdk-linux/build-tools/26.0.0


#    override:
#        - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-26.0.0,
#        android-26,extra-google-m2repository,extra-google-google_play_services,extra-android-support
#        - ANDROID_HOME=/usr/local/android-sdk-linux ./gradlew dependencies

steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # Prepare the container for the build
          - run:
            name: Accept Android SDK license
            command: .circleci/ci-scripts/accept-android-licenses.sh
          - run:
            name: Ensure Android SDK install is up-to-date
            command: .circleci/ci-scripts/ensure-sdkmanager.sh

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test

test:
    override:
        - (./gradlew assemble):
            timeout: 360